# 2-matrix_divided

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> mat = [
...     [1.5, 2, 3],
...	[4, 5, 6]
...	]
>>> print(matrix_divided(mat, 2))
[[0.75, 1.0, 1.5], [2.0, 2.5, 3.0]]
>>> mat2 = [
...	[1, 2],
...	[2, 3, 4]
...	]
>>> print(matrix_divided(mat2, 2)) #doctest: +ELLIPSIS
Traceback (most recent call last):
TypeError: ...
>>> print(matrix_divided(mat, 0)) #doctest: +ELLIPSIS
Traceback (most recent call last):
ZeroDivisionError: ...
>>> mat2 = [
...     [1, 2, 'a'],
...     [2, 3, 4]
...     ]
>>> print(matrix_divided(mat2, 2))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> mat = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(mat, 'a') #doctest: +ELLIPSIS
Traceback (most recent call last):
TypeError: ...
>>> mat2 = [[3]]
>>> print(matrix_divided(mat2, 3))
[[1.0]]
>>> matrix_divided() #doctest: +ELLIPSIS
Traceback (most recent call last):
TypeError: ...
>>> matrix_divided(mat) #doctest: +ELLIPSIS
Traceback (most recent call last):
TypeError: ...
>>> print(matrix_divided(mat, float('inf'))) #doctest: +ELLIPSIS
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
>>> matrix_divided('hi', 2) #doctest: +ELLIPSIS
Traceback (most recent call last):
TypeError: ...
